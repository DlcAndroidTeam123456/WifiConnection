apply plugin: 'maven'
apply plugin: 'signing'

// 在根build.gradle中加入
//ext {
//    mavenReleaseRepo = "http://192.168.1.248:8081/repository/dlc_android/"
//    mavenSnapshotRepo = "http://192.168.1.248:8081/repository/dlc_android_snapshot/"
//    mavenUsername = "admin"
//    mavenPassword = "admin123"
//    mavenGroupName = "cn.dlc.android"
//    // todo 下面几个可以在module中再赋值，如 project.ext.mavenIsRelease = false
//    mavenIsRelease = false
//    mavenArtifactId = null 
//    mavenVersionName = null
//    // ext.mavenIsRelease = false
//    // ext.mavenArtifactId = null 
//    // ext.mavenVersionName = null
//}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    options {
        encoding = "utf-8"
    }

    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def isRelease() {
    return hasProperty("mavenIsRelease") ? mavenIsRelease as boolean : false
}

uploadArchives {
    repositories {
        mavenDeployer {

            repository(url: mavenReleaseRepo) {
                authentication(userName: mavenUsername, password: mavenPassword)
            }

            snapshotRepository(url: mavenSnapshotRepo) {
                authentication(userName: mavenUsername, password: mavenPassword)
            }

            def versionName = isRelease() ? "${mavenVersionName}" : "${mavenVersionName}-SNAPSHOT"

            println "group=${mavenGroupName},artifactId=${mavenArtifactId},version=${versionName}"

            pom.groupId = "${mavenGroupName}"
            pom.artifactId = "${mavenArtifactId}"
            pom.version = "${versionName}"
        }
    }
}

// 进行数字签名
signing {
    // 当 发布版本 & 存在"uploadArchives"任务时，才执行
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

